_realname=yubico-piv-tool
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=2.6.1
pkgrel=1
pkgdesc="Command line tool for the YubiKey PIV application (mingw-w64)"
arch=('any')
mingw_arch=('mingw64' 'ucrt64' 'clang64' 'clangarm64')
url='https://developers.yubico.com/yubico-piv-tool/'
license=('BSD')
msys2_references=(
  'archlinux: yubico-piv-tool'
)
depends=(
  "${MINGW_PACKAGE_PREFIX}-zlib"
  "${MINGW_PACKAGE_PREFIX}-openssl"
)
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "gengetopt"
             "${MINGW_PACKAGE_PREFIX}-openssl"
             "${MINGW_PACKAGE_PREFIX}-zlib"
#             "help2man"
#             "perl" # used by help2man
             "${MINGW_PACKAGE_PREFIX}-check")
validpgpkeys=('1D7308B0055F5AEF36944A8F27A9C24D9588EA0F') # Aveen Ismail <aveen.ismail@yubico.com>
source=("https://developers.yubico.com/${_realname}/Releases/${_realname}-${pkgver}.tar.gz"{,.sig}
        "gengetopt.patch"
        "applink.patch"
        "internal.patch"
        "lib_cmake.patch"
        "ykcs11_cmake.patch"
        "test.patch")
sha256sums=('d4efd2d7c5baca49ffc070dea5fb64c17239095e0e54b10766a8a156b0c09285'
            'SKIP' 'SKIP' 'SKIP' 'SKIP' 'SKIP' 'SKIP' 'SKIP')

prepare() {
  patch -Np1 -i "${srcdir}"/gengetopt.patch
  patch -Np1 -i "${srcdir}"/applink.patch
  patch -Np1 -i "${srcdir}"/internal.patch
  patch -Np1 -i "${srcdir}"/lib_cmake.patch
  patch -Np1 -i "${srcdir}"/ykcs11_cmake.patch
  patch -Np1 -i "${srcdir}"/test.patch
  
  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  # -DHELP2MAN_LOCATION="perl /usr/bin/help2man" \
  # TODO: Something is up with libz & check detection
  # consider opening an issue
  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
    cmake \
      -DBACKEND=winscard \
      -Dcheck_FOUND=1 -DLIBCHECK_LDFLAGS=-lcheck \
      -DZLIB=/ucrt64/lib/libz.dll.a \
      -GNinja \
      -DGENERATE_MAN_PAGES=OFF \
      -DCMAKE_INSTALL_PREFIX="${MINGW_PREFIX}" \
      "${extra_config[@]}" \
      -S "${_realname}-${pkgver}" \
      -B "build-${MSYSTEM}"
}

build() {
  cmake --build "build-${MSYSTEM}"
}

check() {
  cmake --build "build-${MSYSTEM}" --target test
}

package() {
  DESTDIR="${pkgdir}" cmake --install "build-${MSYSTEM}"

  install -Dm644 ${srcdir}/${_realname}-${pkgver}/COPYING ${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/COPYING
  # See https://aur.archlinux.org/packages/ykcs11-p11-kit-module
  # so that p11-kit, p11tool, etc can use libykcs11 out of the box
  # also https://github.com/Yubico/yubico-piv-tool/issues/92
  mkdir -p ${pkgdir}${MINGW_PREFIX}/share/p11-kit/modules
  echo "module: ..\..\bin\libykcs11.dll" > ${pkgdir}${MINGW_PREFIX}/share/p11-kit/modules/yubico.module
}
